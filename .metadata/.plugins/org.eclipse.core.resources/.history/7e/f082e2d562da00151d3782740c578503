package com.bellinfo.exam.student.repository;

import javax.transaction.Transactional;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Criterion;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.bellinfo.exam.model.Faculty;
import com.bellinfo.exam.model.Login;
import com.bellinfo.exam.model.Student;

@Repository("srepo")
@Transactional
public class StudentRepositoryImpl implements StudentRepository{

	@Autowired
	SessionFactory sessionFactory;
	private Session getSession(){
		return sessionFactory.getCurrentSession();
	}
	public int saveStudent(Student student)
	{
		return (Integer) getSession().save(student);
	}
	public Student getStudent(Login login)
	{
		Criteria cr=getSession().createCriteria(Student.class);
		Criterion crt_userName=Restrictions.ilike("userName", login.getUserName());
		Criterion crt_passWord=Restrictions.ilike("passWord", login.getPassWord());
		cr.add(crt_userName);
		cr.add(crt_passWord);
		return (Student) cr.uniqueResult();
	}
}
