package com.bellinfo.exam.student.control;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.bellinfo.exam.student.service.StudentService;
import com.bellinfo.exam.model.Student;
import com.bellinfo.exam.model.StudentSubject;

@Controller
public class StudentProfileControl {
	@Autowired
	StudentService studentService;
	@Autowired
	StudentSubject studentSubject;
	
	
	@RequestMapping(value="/student/{studentId}/profile", method=RequestMethod.GET)
	public String viewStudentProfile(Model model, @PathVariable Integer studentId){
		model.addAttribute("student",studentService.getStudent(studentId));
		model.addAttribute("subjectList", studentService.getSubject(studentId));
		return "student-profile";
	}
	
	/*@RequestMapping(value="/student/{studentId}/subject/add", method=RequestMethod.GET)
	public String addStudentSubject(Model model, @PathVariable Integer studentId){
		model.addAttribute("subject",studentSubject);
		model.addAttribute("student",studentService.getStudent(studentId));
		model.addAttribute("subjectList", studentService.getSubject(studentId));
		return "add-student-subject";
	}
	
	@RequestMapping(value="/student/{studentId}/subject/add", method=RequestMethod.POST)
	public String addStudentSubject(@Valid @ModelAttribute("subject") StudentSubject subject,
										BindingResult br, Model model,@PathVariable Integer studentId){
		if(br.hasErrors()){
			model.addAttribute("student",studentService.getStudent(studentId));
			model.addAttribute("subjectList", studentService.getSubject(studentId));
			return "add-student-subject";
		}
		try {
			studentService.saveSubject(subject);
			return viewStudentProfile(model, studentId);
		} catch (Exception e) {
			model.addAttribute("message", "subject already exist");
			model.addAttribute("student",studentService.getStudent(studentId));
			model.addAttribute("subjectList", studentService.getSubject(studentId));
			return "add-student-subject";
		}
	}
	
	@RequestMapping(value="/student/{studentId}/subject/{subjectId}", method=RequestMethod.GET)
	public String viewSubjectTests(Model model, @PathVariable Integer studentId, @PathVariable Integer subjectId){
		model.addAttribute("student",studentService.getStudent(studentId));
		model.addAttribute("subject", studentService.getSubjectBySubjectId(subjectId));
		model.addAttribute("testsList", studentService.getSubjectTests(subjectId));
		return "student-subject-test";
	}
	
	@RequestMapping(value="/student/{studentId}/subject/{subjectId}/test/add", method=RequestMethod.GET)
	public String addStudentSubjectTests(Model model, @PathVariable Integer studentId, @PathVariable Integer subjectId){
		model.addAttribute("subjectTest",studentSubjectTests);
		model.addAttribute("student",studentService.getStudent(studentId));
		model.addAttribute("subject", studentService.getSubjectBySubjectId(subjectId));
		model.addAttribute("testsList", studentService.getSubjectTests(subjectId));
		return "add-student-subject-test";
	}
	
	@RequestMapping(value="/student/{studentId}/subject/{subjectId}/test/add", method=RequestMethod.POST)
	public String addStudentSubjectTests(@Valid @ModelAttribute("subjectTest") StudentSubjectTests subjectTest,
										BindingResult br, Model model,@PathVariable Integer studentId,
										@PathVariable Integer subjectId){
		if(br.hasErrors()){
			model.addAttribute("student",studentService.getStudent(studentId));
			model.addAttribute("subject", studentService.getSubjectBySubjectId(subjectId));
			model.addAttribute("testsList", studentService.getSubjectTests(subjectId));
			return "add-student-subject-test";
		}
		try {
			studentService.saveSubjectTests(subjectTest);
			return viewSubjectTests(model, studentId,subjectId);
		} catch (Exception e) {
			model.addAttribute("message", "test already exist");
			model.addAttribute("student",studentService.getStudent(studentId));
			model.addAttribute("subject", studentService.getSubjectBySubjectId(subjectId));
			model.addAttribute("testsList", studentService.getSubjectTests(subjectId));
			return "add-student-subject-test";
		}
	}*/
	
}
