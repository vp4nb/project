package com.bellinfo.exam.control;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.bellinfo.exam.model.Faculty;
import com.bellinfo.exam.model.FacultySubject;
import com.bellinfo.exam.model.FacultySubjectTests;
import com.bellinfo.exam.service.FacultyService;

@Controller
public class ViewProfileControl {
	@Autowired
	FacultyService facultyService;
	@Autowired
	FacultySubject facultySubject;
	@Autowired
	FacultySubjectTests facultySubjectTests;
	
	@RequestMapping(value="/faculty/{facultyId}/profile", method=RequestMethod.GET)
	public String viewFacultyProfile(Model model, @PathVariable Integer facultyId){
		model.addAttribute("faculty",facultyService.getFaculty(facultyId));
		model.addAttribute("subjectList", facultyService.getSubject(facultyId));
		return "faculty-profile";
	}
	
	@RequestMapping(value="/faculty/{facultyId}/subject/add", method=RequestMethod.GET)
	public String addFacultySubject(Model model, @PathVariable Integer facultyId){
		model.addAttribute("subject",facultySubject);
		model.addAttribute("faculty",facultyService.getFaculty(facultyId));
		model.addAttribute("subjectList", facultyService.getSubject(facultyId));
		return "add-faculty-subject";
	}
	
	@RequestMapping(value="/faculty/{facultyId}/subject/add", method=RequestMethod.POST)
	public String addFacultySubject(@Valid @ModelAttribute("subject") FacultySubject subject,
										BindingResult br, Model model,@PathVariable Integer facultyId){
		if(br.hasErrors()){
			return "add-faculty-subject";
		}
		try {
			facultyService.saveSubject(subject);
			return viewFacultyProfile(model, facultyId);
		} catch (Exception e) {
			model.addAttribute("message", "subject already exist");
			return addFacultySubject(model, facultyId);
		}
	}
	
	@RequestMapping(value="/faculty/{facultyId}/subject/{subjectId}", method=RequestMethod.GET)
	public String viewSubjectTests(Model model, @PathVariable Integer facultyId, @PathVariable Integer subjectId){
		model.addAttribute("faculty",facultyService.getFaculty(facultyId));
		model.addAttribute("subject", facultyService.getSubjectBySubjectId(subjectId));
		model.addAttribute("testsList", facultyService.getSubjectTests(subjectId));
		return "faculty-subject-test";
	}
	
	@RequestMapping(value="/faculty/{facultyId}/subject/{subjectId}/test/add", method=RequestMethod.GET)
	public String addFacultySubjectTests(Model model, @PathVariable Integer facultyId, @PathVariable Integer subjectId){
		model.addAttribute("subjectTest",facultySubjectTests);
		model.addAttribute("faculty",facultyService.getFaculty(facultyId));
		model.addAttribute("subject", facultyService.getSubjectBySubjectId(subjectId));
		return "add-faculty-subject";
	}
	
	@RequestMapping(value="/faculty/{facultyId}/subject/add", method=RequestMethod.POST)
	public String addFacultySubjectTests(@Valid @ModelAttribute("subject") FacultySubject subject,
										BindingResult br, Model model,@PathVariable Integer facultyId){
		if(br.hasErrors()){
			return "add-faculty-subject";
		}
		try {
			facultyService.saveSubject(subject);
			return viewFacultyProfile(model, facultyId);
		} catch (Exception e) {
			model.addAttribute("message", "subject already exist");
			return addFacultySubject(model, facultyId);
		}
	}
	
}
