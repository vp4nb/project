package com.bellinfo.exam.faculty.model;

import java.util.Arrays;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.springframework.stereotype.Component;
@Entity
@Table(name="STUDENT_REGISTER")
@Component
public class Student {


	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name="STUDENT_ID", unique=true, nullable=false)
	private int id;
	@Column(name="STUDENT_NAME", nullable=false)
	private String name;
	@Column(name="STUDENT_USERNAME", nullable=false)
	private String userName;
	@Column(name="STUDENT_PASSWORD", nullable=false)
	private String passWord;
	@Transient
	private String rePassWord;
	@Column(name="STUDENT_EMAIL", nullable=false, unique=true)
	private String email;
	@Column(name="STUDENT_SUBJECTS")
	private String[] subjects;
	
	public Student(){
	}

	public Student(int id, String name, String userName, String passWord, String rePassWord, String email,
			String[] subjects) {
		super();
		this.id = id;
		this.name = name;
		this.userName = userName;
		this.passWord = passWord;
		this.rePassWord = rePassWord;
		this.email = email;
		this.subjects = subjects;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getUserName() {
		return userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	public String getPassWord() {
		return passWord;
	}

	public void setPassWord(String passWord) {
		this.passWord = passWord;
	}

	public String getRePassWord() {
		return rePassWord;
	}

	public void setRePassWord(String rePassWord) {
		this.rePassWord = rePassWord;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String[] getSubjects() {
		return subjects;
	}

	public void setSubjects(String[] subjects) {
		this.subjects = subjects;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((email == null) ? 0 : email.hashCode());
		result = prime * result + id;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((passWord == null) ? 0 : passWord.hashCode());
		result = prime * result + ((rePassWord == null) ? 0 : rePassWord.hashCode());
		result = prime * result + Arrays.hashCode(subjects);
		result = prime * result + ((userName == null) ? 0 : userName.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Student other = (Student) obj;
		if (email == null) {
			if (other.email != null)
				return false;
		} else if (!email.equals(other.email))
			return false;
		if (id != other.id)
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (passWord == null) {
			if (other.passWord != null)
				return false;
		} else if (!passWord.equals(other.passWord))
			return false;
		if (rePassWord == null) {
			if (other.rePassWord != null)
				return false;
		} else if (!rePassWord.equals(other.rePassWord))
			return false;
		if (!Arrays.equals(subjects, other.subjects))
			return false;
		if (userName == null) {
			if (other.userName != null)
				return false;
		} else if (!userName.equals(other.userName))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Faculty [id=" + id + ", name=" + name + ", userName=" + userName + ", passWord=" + passWord
				+ ", rePassWord=" + rePassWord + ", email=" + email + ", subjects=" + Arrays.toString(subjects) + "]";
	}

}
